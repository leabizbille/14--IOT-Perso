
Launch the application :
fastapi dev main.py

# Pour le serveur : 
uvicorn main:app --reload --host=0.0.0.0

# effacer les connexions sur le port 8000 :
netstat -ano | findstr :8000

Mon Adresse IPv4 192.168.0.105




# 1 Environnement  -----------------------------------------------------------------
python -m venv myenv
myenv\Scripts\activate       # Environnement

# 2 Git Ignore ---------------------------------------------------------------------

# 3. Git ---------------------------------------------------------------------------
# Cr√©ez une nouvelle branche pour une fonctionnalit√©
git checkout -b feature/ajout-page-meteo

# Faites vos changements, puis ajoutez et commettez les modifications
git add .
git commit -m "Ajout de la page m√©t√©o"

# Une fois votre travail termin√©, revenez √† la branche principale
git checkout main

# Fusionnez votre branche dans la branche principale
git merge feature/ajout-page-meteo

# Poussez les modifications vers le d√©p√¥t distant
git push origin main

# 4. requirements--------------------------------------------------------------------
Connaitre la version de python : where python    
# Ici, la version python et localisation sur ordi.

pip install -r requirements.txt
pip install bleak --force-reinstall # si probleme avec bleak pour le t√©l√©chargement des donn√©es en bluetooth
pip install visions[type_image_path]==0.7.4
pip install --upgrade pip

üöÄ Biblioth√®ques pour la gestion asynchrone et les requ√™tes API :

* asyncio ‚Äì Permet d'ex√©cuter du code de mani√®re asynchrone (ex√©cution concurrente). Utile pour interagir avec des API ou g√©rer des t√¢ches parall√®les sans bloquer l'application.
* requests ‚Äì Utilis√© pour envoyer des requ√™tes HTTP √† des API ou r√©cup√©rer des pages web.
* openmeteo-requests ‚Äì Wrapper sp√©cifique pour interagir avec l'API m√©t√©o Open-Meteo.
* requests-cache ‚Äì Ajoute un cache aux requ√™tes requests pour √©viter de refaire les m√™mes appels API inutiles.
* retry-requests ‚Äì Permet de r√©essayer automatiquement une requ√™te HTTP en cas d'√©chec (ex: probl√®me r√©seau temporaire).
* openmeteo_py ‚Äì Client Python pour r√©cup√©rer des donn√©es m√©t√©orologiques via Open-Meteo.
* geopy ‚Äì Utilis√© pour la g√©olocalisation et le calcul de distances entre lieux.
* holidays ‚Äì Permet de r√©cup√©rer les jours f√©ri√©s d‚Äôun pays donn√©, utile pour ajuster des pr√©visions.

üìÖ Gestion du temps et des t√¢ches planifi√©es : 

* datetime ‚Äì Module int√©gr√© pour manipuler les dates et heures.
* schedule ‚Äì Permet d‚Äôex√©cuter des t√¢ches √† des intervalles r√©guliers (ex: ex√©cuter un script toutes les heures).

üìù Gestion des entr√©es utilisateur et manipulation de fichiers:

* argparse ‚Äì Module int√©gr√© permettant de g√©rer les arguments pass√©s en ligne de commande (utile pour cr√©er des scripts CLI).
* uuid ‚Äì Permet de g√©n√©rer des identifiants uniques (UUID), souvent utilis√© pour identifier des objets de mani√®re unique.
* PyPDF2 ‚Äì Permet de lire et manipuler des fichiers PDF (extraction de texte, fusion, s√©paration de pages).

üìä Analyse et traitement des donn√©es :

* pandas ‚Äì Biblioth√®que essentielle pour manipuler et analyser des donn√©es sous forme de tableaux (DataFrame).
* numpy ‚Äì Fournit des structures et fonctions math√©matiques avanc√©es pour manipuler des tableaux num√©riques efficacement.
* statsmodels ‚Äì Fournit des outils pour les statistiques et la mod√©lisation des s√©ries temporelles.
* scikit-learn ‚Äì Outil cl√© pour l‚Äôapprentissage automatique et le traitement des donn√©es (classification, r√©gression, clustering, etc.).
* nltk ‚Äì Biblioth√®que sp√©cialis√©e en traitement du langage naturel (NLP), utilis√©e pour l‚Äôanalyse de texte.

üìà Visualisation des donn√©es et reporting

* pygwalker ‚Äì Interface graphique permettant d'explorer les donn√©es de fa√ßon interactive en utilisant pandas et plotly.
* sweetviz ‚Äì G√©n√®re automatiquement des rapports d‚Äôanalyse de donn√©es pour une exploration rapide.
* missingno ‚Äì Visualise les valeurs manquantes dans un dataset pour mieux comprendre les donn√©es et leur qualit√©.
* summarytools ‚Äì Fournit des r√©sum√©s statistiques et exploratoires des datasets.
* plotly ‚Äì Biblioth√®que de visualisation interactive pour g√©n√©rer des graphiques dynamiques.
* streamlit ‚Äì Framework permettant de cr√©er facilement des applications web interactives pour la visualisation de donn√©es et l‚ÄôIA.


pip list # Pour connaitre l'ensemble des packages dans le requirements.
pip freeze > requirements_Sauvegarde.txt # Pour connaitre exactements les packages sans modifier le requiements utilis√© actuellement.

#------------------------------------------------------------------
python govee-h5075.py -m      # r√©cuperation des data temp√©ratures et modules
python govee-h5075.py -s

#------------------------------------------------------------------
# Pour mettre en fonction streamlit 
streamlit run Streamlit_BaseBatiment.py

#------------------------------------------------------------------
Mettre le fichier .known_govees dans le fichier C:\Users\Lau
